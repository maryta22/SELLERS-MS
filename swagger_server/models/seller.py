# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Seller(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, nombres: str=None, apellidos: str=None, correo: str=None, celular: str=None, estado: int=None):  # noqa: E501
        """Seller - a model defined in Swagger

        :param id: The id of this Seller.  # noqa: E501
        :type id: int
        :param nombres: The nombres of this Seller.  # noqa: E501
        :type nombres: str
        :param apellidos: The apellidos of this Seller.  # noqa: E501
        :type apellidos: str
        :param correo: The correo of this Seller.  # noqa: E501
        :type correo: str
        :param celular: The celular of this Seller.  # noqa: E501
        :type celular: str
        :param estado: The estado of this Seller.  # noqa: E501
        :type estado: int
        """
        self.swagger_types = {
            'id': int,
            'nombres': str,
            'apellidos': str,
            'correo': str,
            'celular': str,
            'estado': int
        }

        self.attribute_map = {
            'id': 'id',
            'nombres': 'nombres',
            'apellidos': 'apellidos',
            'correo': 'correo',
            'celular': 'celular',
            'estado': 'estado'
        }
        self._id = id
        self._nombres = nombres
        self._apellidos = apellidos
        self._correo = correo
        self._celular = celular
        self._estado = estado

    @classmethod
    def from_dict(cls, dikt) -> 'Seller':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Seller of this Seller.  # noqa: E501
        :rtype: Seller
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Seller.


        :return: The id of this Seller.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Seller.


        :param id: The id of this Seller.
        :type id: int
        """

        self._id = id

    @property
    def nombres(self) -> str:
        """Gets the nombres of this Seller.


        :return: The nombres of this Seller.
        :rtype: str
        """
        return self._nombres

    @nombres.setter
    def nombres(self, nombres: str):
        """Sets the nombres of this Seller.


        :param nombres: The nombres of this Seller.
        :type nombres: str
        """

        self._nombres = nombres

    @property
    def apellidos(self) -> str:
        """Gets the apellidos of this Seller.


        :return: The apellidos of this Seller.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """Sets the apellidos of this Seller.


        :param apellidos: The apellidos of this Seller.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def correo(self) -> str:
        """Gets the correo of this Seller.


        :return: The correo of this Seller.
        :rtype: str
        """
        return self._correo

    @correo.setter
    def correo(self, correo: str):
        """Sets the correo of this Seller.


        :param correo: The correo of this Seller.
        :type correo: str
        """

        self._correo = correo

    @property
    def celular(self) -> str:
        """Gets the celular of this Seller.


        :return: The celular of this Seller.
        :rtype: str
        """
        return self._celular

    @celular.setter
    def celular(self, celular: str):
        """Sets the celular of this Seller.


        :param celular: The celular of this Seller.
        :type celular: str
        """

        self._celular = celular

    @property
    def estado(self) -> int:
        """Gets the estado of this Seller.


        :return: The estado of this Seller.
        :rtype: int
        """
        return self._estado

    @estado.setter
    def estado(self, estado: int):
        """Sets the estado of this Seller.


        :param estado: The estado of this Seller.
        :type estado: int
        """

        self._estado = estado
